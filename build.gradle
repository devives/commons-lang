plugins {
    id 'java-library'
    id "com.github.hierynomus.license" version "0.16.1"
    id "maven-publish"
    id 'signing'
}

group = 'com.devives'
archivesBaseName = "devive-commons-lang"
version = '0.3.2'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.options.encoding = "UTF-8"
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

javadoc.options.encoding = "UTF-8"
javadoc.failOnError = false

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.platform:junit-platform-suite'
    testImplementation 'com.google.guava:guava:33.0.0-jre'
    testImplementation 'org.apache.commons:commons-pool2:2.12.0'
    testImplementation 'org.apache.commons:commons-lang3:3.16.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    testImplementation("org.apache.commons:commons-collections4:4.5.0:tests")
    // https://mvnrepository.com/artifact/commons-io/commons-io
    testImplementation 'commons-io:commons-io:2.18.0'

}

java {
    withJavadocJar()
    withSourcesJar()
}

task testJar(type: Jar) {
    archiveClassifier.set('tests')
    from sourceSets.test.output
}

configurations {
    testArtifacts
}

artifacts {
    testArtifacts testJar
}

var manifest = manifest {
    attributes = [
            "Manifest-Version"      : "1.0",
            "Name"                  : "com/devives/commons/lang",
            "Specification-Title"   : "Commons and utility classes",
            "Specification-Version" : "$project.version",
            "Specification-Vendor"  : "Vladimir Ivanov",
            "Implementation-Title"  : "com.devives.commons.lang",
            "Implementation-Version": "$project.version",
            "Implementation-Vendor" : "Vladimir Ivanov",
            "Build-Date"            : new Date().format("yyyy-MM-dd HH:mm:ss (Z)"),
            "X-Compile-Source-JDK"  : "$sourceCompatibility",
            "X-Compile-Target-JDK"  : "$targetCompatibility"
    ]
}

jar {
    setManifest(manifest)

    into("META-INF/maven/$project.group/$archivesBaseName") {
        from { generatePomFileForCommonsLangPublication }
        rename ".*", "pom.xml"
    }

    into("META-INF") {
        from { "LICENSE" }
        from { "NOTICE" }
    }
}

sourcesJar {
    setManifest(manifest)

    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForCommonsLangPublication }
        rename ".*", "pom.xml"
    }

    into("META-INF") {
        from { "LICENSE" }
        from { "NOTICE" }
    }
}

license {
    header project.file('codequality/HEADER')
    strictCheck true
}

publishing {
    publications {
        CommonsLang(MavenPublication) {
            artifactId = archivesBaseName

            from components.java
            artifact testJar
            pom {
                packaging = "jar"
                artifactId = archivesBaseName
                url = "https://github.com/devives/commons-lang"
                description = "A common library of utility classes and structures"
                name = "Devive Commons Lang"

                properties = [
                        "project.build.sourceEncoding": "UTF-8"
                ]

                organization {
                    name = "DEVIVES"
                    url = "https://github.com/devives"
                }

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                scm {
                    connection = "scm:https://github.com/devives/commons-lang.git"
                    developerConnection = "scm:git@github.com:devives/commons-lang.git"
                    url = "https://github.com/devives/commons-lang"
                }

                developers {
                    developer {
                        id = "ivvlev"
                        name = "Vladimir Ivanov"
                        email = "ivvlev@devives.com"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'buildRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }

}

signing {
    sign publishing.publications.CommonsLang
}

tasks.register("zip-for-central-sonatype", Zip) {
    group("publishing")
    dependsOn("publish")
    setArchiveFileName( "$archivesBaseName-$version"+".zip")
    from(layout.buildDirectory.dir("repo")){
        exclude("**/maven-metadata.xml*")
    }
}


test {
    useJUnitPlatform()
    jvmArgs = ['-Xmx16G']
}
